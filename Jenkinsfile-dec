pipeline {
    agent { label 'slave-1' }
    tools { maven 'mvn398' }

    stages {
        stage('build') {
            steps {
                echo "this is build stage"
                sh 'mvn clean package -DskipTests'
            }
        }

        stage('test') {
            steps {
                echo "this is test stage"
                sh 'mvn test'
            }
        }

        stage('Dockerized the app') {
            steps {
                echo "this is dockerize stage"
                sh 'docker build -t java-test -f Dockerfile .'
            }
        }

        stage('login and push') {
            steps {
                echo "this is login and push stage"
                withCredentials([usernamePassword(credentialsId: 'docker-hup', usernameVariable: 'USER', passwordVariable: 'PASS')]) {
                    sh '''
                        echo "$PASS" | docker login -u "$USER" --password-stdin
                        docker tag java-test "$USER/java-test"
                        docker push "$USER/java-test"
                    '''
                }
            }
        }
    }

    post {
        success {
            slackSend (
                channel: '#jenkins-ci',
                message: "Build Success - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)",
                teamDomain: 'jenkinstest-xxj7763',
                tokenCredentialId: 'slack-notificate'
            )
        }
        failure {
            slackSend (
                channel: '#jenkins-ci',
                message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)",
                teamDomain: 'jenkinstest-xxj7763',
                tokenCredentialId: 'slack-notificate'
            )
        }
    }
}
